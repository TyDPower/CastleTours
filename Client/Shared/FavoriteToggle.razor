@inject IUserService UserService
@inject ITourService TourService
@inject IAuthService AuthService
@inject IDialogServiceCustom DialogServiceCustom
@implements IDisposable

<MudToggleIconButton    @bind-Toggled="@IsFavorite"
                        @onclick="HandleClick"
                        Icon="@Icons.Filled.FavoriteBorder"
                        Color="@Color.Error"
                        Title="Favorite?"
                        ToggledIcon="@Icons.Filled.Favorite"
                        ToggledColor="@Color.Success"
                        ToggledTitle="Favorite!"/>

@code {

    [Parameter] public bool IsFavorite { get; set; }
    [Parameter] public int TourId { get; set; }

    protected bool IsAuthorized = false;

    protected override async Task OnInitializedAsync()
    {
        IsAuthorized = await AuthService.GetUserAuthState();
    }

    protected override void OnInitialized()
    {
        TourService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        TourService.OnChange -= StateHasChanged;
    }

    private async Task HandleClick()
    {
        if (IsAuthorized)
        {
            if (IsFavorite)
            {
                await UserService.RemoveFavorite(TourId);
                IsFavorite = false;
            }
            else
            {
                Favorite newFavorite = new Favorite
                {
                    DateFavorited = DateTime.Now,
                    TourId = TourId,
                    UserId = UserService.User.Id
                };

                await UserService.AddFavorite(newFavorite);
                IsFavorite = true;
            }
        }
        else
        {
            DialogServiceCustom.SignInDialog();
        }
    }
}
