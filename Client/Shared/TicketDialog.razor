@inject ILocalStorageService LocalStorage
@inject IToastService ToastService
@inject ICartService CartService
@inject ITicketOrderService TicketOrderService
@inject IStoreConfigService StoreConfigService

<div class="modal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">@SelectedTour.Name</h5>
        <button type="button" class="btn-close" @onclick="OnClose"></button>
      </div>
      <div class="modal-body">
        <div>
            <h5>@SelectedTour.Name</h5>
            <h6><span class="oi oi-british-pound"></span> @SelectedTour.GetTicketPriceFormatted()</h6>
        </div>
        <br/>
        @if (SelectedTour.Addons.Count() > 0)
        {
            <div>
                <h5>Tour Extras</h5>
                @foreach (var i in SelectedTour.Addons)
                {
                    <input type="checkbox" id="@i.Id" @onclick="e => TicketOrderService.AddTourAddonsToTicket(i)">
                    <label for="@i.Id"> @i.Name $@i.GetFormattedPrice()pp </label><br />
                }
            </div>
            <br/>
        }
        <div>
            <label>Ticket QTY</label> &nbsp;
            <select id="ticketQty" @onchange="e => TicketOrderService.SetTicketQty(Convert.ToInt32(e.Value))">
                @for (var i=1; i<=StoreConfigService.GetMaxticketQty(); i++)
                {
                    <option value="@i">@i</option>
                }
            </select>
        </div>
        <div>
            <hr />
            <h5>Ticket total: <span class="oi oi-british-pound"></span>
                @TicketOrderService.SetAndReturnTicketOrderTotal(SelectedTour.GetTicketPrice())
            </h5>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" @onclick="OnClose">
            <i class="fas fa-times"></i>
        </button>
        <button type="button" class="btn btn-primary" @onclick="AddTicketToCart">
            <i class="fas fa-cart-arrow-down"></i> Add to cart
        </button>
      </div>
    </div>
  </div>
</div>

@code {
    [Parameter] public EventCallback OnClose { get; set; }
    [Parameter] public Tour SelectedTour { get; set; }

    protected override void OnInitialized()
    {
        string ticketId = Guid.NewGuid().ToString();
        TicketOrderService.SetTicketId(ticketId);
        TicketOrderService.SetCastleId(SelectedTour.CastleId);
        TicketOrderService.SetTourId(SelectedTour.Id);
        TicketOrderService.SetTicketTitle(SelectedTour.Name);
    }

    protected async Task AddTicketToCart()
    {
        DateTime ticketCreatedDate = DateTime.Now;
        TicketOrderService.SetTicketCreatedDate(ticketCreatedDate);
        await CartService.AddToCart(TicketOrderService.GetTicketOrder());
        await TicketOrderService.ClearTicketOrder();

        OnClose.InvokeAsync();
    }
}
