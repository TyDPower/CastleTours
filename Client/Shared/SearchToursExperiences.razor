@inject NavigationManager NavigationManager
@inject IUserService UserService
@inject ITourService TourService
@inject IAuthService AuthService
@inject ICategoryService CategoryService
@inject ISearchService SearchService
@inject IFacilityService FacilityService
@inject IDialogServiceCustom DialogServiceCustom
@implements IDisposable

<div class="container-fluid py-5 px-lg-5">
      <div class="row border-bottom mb-4">
        <div class="col-12">
          <h1 class="display-4 fw-bold text-serif mb-4">Your adventure awaits...</h1>
        </div>
      </div>
      <div class="row">
          @if (WithFilter)
          {
              <div class="col-lg-3 pt-3">
                  <form class="pe-xl-3" action="#">
                    @*<div class="mb-4">
                      <label class="form-label" for="form_search">Keyword</label>
                      <div class="input-label-absolute input-label-absolute-right">
                        <div class="label-absolute"><i class="fa fa-search"></i></div>
                        <input class="form-control pe-4" type="search" name="search" placeholder="Keywords" id="form_search">
                      </div>
                    </div>*@
                    <div class="mb-4">
                      <label class="form-label" for="form_neighbourhood">Area</label>
                      <select class="form-control">
                        <option value="neighbourhood_0">Select an area</option>
                        @foreach (var area in SearchService.LocationAreas)
                        {
                            <option id="@area">@area</option>
                        }
                      </select>
                    </div>
                    <div class="mb-4">
                      <label class="form-label" for="form_category">Category</label>
                      <select class="form-control">
                        <option>Select a category</option>
                        @foreach (var category in SearchService.CategoryNames)
                        {
                            <option id="@category">@category</option>
                        }
                      </select>
                    </div>
                    <div class="pb-4">
                      <div class="collapse" id="moreFilters">
                        <div class="mb-4">
                          <label class="form-label">Facilities</label>
                          <ul class="list-unstyled mb-0">
                              @foreach (var facility in SearchService.FacilityTypes)
                              {

                                  <li>
                                      <div class="form-check">
                                          <input class="form-check-input" type="checkbox" id="@facility" name="@facility">
                                          <label class="form-check-label" for="@facility">@facility</label>
                                      </div>
                                  </li>
                              }
                          </ul>
                        </div>
                      </div>
                      <div class="mb-4">
                        <button class="btn btn-link btn-collapse ps-0 text-secondary" type="button" data-bs-toggle="collapse" data-bs-target="#moreFilters" aria-expanded="false" aria-controls="moreFilters" data-expanded-text="Less filters" data-collapsed-text="More filters">More filters</button>
                      </div>
                      <div class="mb-4">
                        <button class="btn btn-primary" type="submit"> <i class="fas fa-filter me-1"></i>Filter</button>
                      </div>
                    </div>
                  </form>
              </div>
          }
        
        <div class="@resultDisplaySize">
          @if (WithFilter)
          {
              <div class="d-flex justify-content-between align-items-center flex-column flex-md-row mb-4">
                <div class="me-3">
                  <p class="mb-3 mb-md-0"><strong>@TourService.SearchResults.Count()</strong> results found</p>
                </div>
                <div class="flex-container">
                  <label class="form-label me-2"></label>
                  <select class="form-select">
                    <option selected>Sort by &nbsp;</option>
                    <option value="sortBy_0">Most popular</option>
                    <option value="sortBy_1">Recommended</option>
                    <option value="sortBy_2">Newest</option>
                    <option value="sortBy_3">Oldest</option>
                    <option value="sortBy_4">Closest</option>
                  </select>
                </div>
              </div>
          }
          <!-- tour items -->
          <div class="row">
             @foreach (var result in TourService.SearchResults)
             {
                <!-- tour item-->
                <div typeof="button" class="col-sm-6 col-xl-3 mb-5 hover-animate tour-item z-index-20 " @onclick="(()=> HandleTourSelect(result.Id))">
                  <div class="card h-100 border-0 shadow">
                    <div class="card-img-top overflow-hidden dark-overlay bg-cover" style="background-image: url(@result.ImgUrl); min-height: 200px;">
                      <div class="card-img-overlay-bottom z-index-20">
                        <h4 class="text-white text-shadow">@result.Title</h4>
                        <p class="mb-2 text-xs">
                            <div>
                                @if (result.Rating >= 0)
                                {
                                    var count = 0;
                                    @for (var i = 0; i < 5; i++)
                                    {
                                        if (result.Rating - count > 0)
                                        {
                                            <span>
                                                <i class="fa fa-star text-warning"></i>
                                            </span>
                                            count++;
                                        }
                                        else
                                        {
                                            <span>
                                                <i class="fa fa-star text-gray-300"></i>
                                            </span>
                                        }
                                    }
                                }
                            </div>
                        </p>
                      </div>
                      <div class="card-img-overlay-top d-flex justify-content-between align-items-center">
                        <div class="card-fav-icon z-index-40"> 
                            <FavoriteToggle IsFavorite="result.IsFavorite"
                                            TourId="result.Id" />
                        </div>
                      </div>
                    </div>
                    <div class="card-body">
                      <p class="text-sm text-muted mb-3">@result.Blurb</p>
                      <p class="text-sm text-muted text-uppercase mb-1"><span class="text-dark">@result.Location</span></p>
                      <p class="text-sm mb-0">
                          @foreach (var facility in result.Facilities)
                          {
                              if (facility == result.Facilities[result.Facilities.Count() - 1])
                              {
                                  <span class="me-1"><span class="@facility.Icon"></span> @facility.Type </span>
                              }
                              else
                              {
                                  <span class="me-1"><span class="@facility.Icon"></span> @facility.Type | </span>
                              }
                          }
                      </p>
                    </div>
                  </div>
                </div>
             }
          </div>
          <!-- Pagination -->
          <nav aria-label="Page navigation example">
            <div class="pagination pagination-template d-flex justify-content-center">
                @for (int i=1; i<=TourService.PageCount; i++)
                {
                    int paginationIndex = i;
                    <span class="btn page-selection @(i == TourService.CurrentPage ? "btn-info" : "btn-outline-info")" @onclick="() => GetToursWithPaginantion(paginationIndex, SearchText)">
                        @i
                    </span>
                }
            </div>
          </nav>
        </div>
      </div>
</div>


@code {
    [Parameter] public string? SearchText { get; set; } = "castle";
    [Parameter] public bool WithFilter { get; set; } = true;

    private string resultDisplaySize = "col-lg-9";

    protected override void OnInitialized()
    {
        if (!WithFilter) resultDisplaySize = "col-lg-12";
        TourService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        TourService.OnChange -= StateHasChanged;
    }

    protected override async Task OnInitializedAsync()
    {
        await GetToursWithPaginantion(1, SearchText);

        if (WithFilter)
        {
            await SearchService.LoadCategories("names");
            await SearchService.LoadFacilities("types");
            await SearchService.LoadLocations("areas");
        }

    }

    private async Task GetToursWithPaginantion(int paginationIndex, string searchText)
    {
        await TourService.SearchTours(paginationIndex, searchText);
        var IsAuthorized = await AuthService.GetUserAuthState();

        if (IsAuthorized)
        {
            var favorites = await UserService.GetUserFavorites();
            foreach (var f in favorites)
            {
                foreach (var r in TourService.SearchResults)
                    if (f.TourId == r.Id) r.IsFavorite = true;   
            }

            CategoryService.LoadCategories();
        }
    }

    private void HandleTourSelect(int id)
    {
        NavigationManager.NavigateTo($"./tour/{id}");
    }
}


