@page "/{tour}"
@inject ICategoryService CategoryService
@inject ITourService TourService
@inject ITicketOrderService TicketOrderService
@inject NavigationManager NavigationManager

@if (TicketOrderService.GetTicketDialogStatus())
{
    <TicketDialog   OnClose="@TicketOrderService.CloseTicketDialog" 
                    SelectedTour="@SelectedTour" />
}


@code {
    [Parameter] public string tour { get; set; }

    private Tour SelectedTour { get; set; } = new Tour();

    protected override async Task OnInitializedAsync()
    {
        await TourService.SearchTours();
    }

    private void HandleOpenTour(int id)
    {
        NavigationManager.NavigateTo($"/tour/{id}");
    }

    private void HandleOpenTicketDialog(Tour t)
    {
        SelectedTour = t;
        TicketOrderService.ShowTicketDialog();
    }
}
