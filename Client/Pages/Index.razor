@page "/"
@page "/{categoryurl}"
@inject ICategoryService CategoryService
@inject ITourService TourService
@inject ISyncLocalStorageService LocalStorgae
@inject IStatsService StatsService

@if (Category != null)
{
    <h1>Welcome to the @Category.Name section.</h1>
    <TourList />
}
else
{
    <AuthorizeView>
        <NotAuthorized>
            <h1>Welcome to Castle Tours</h1>
        </NotAuthorized>
        <Authorized>
            <h1>Welcome back, @LocalStorgae.GetItemAsString("username")!</h1>
        </Authorized>
    </AuthorizeView>

    <TourList />
}



@code {
    [Parameter] public string CategoryUrl { get; set; }

    private Category Category = null;

    protected override async Task OnParametersSetAsync()
    {
        await TourService.LoadTours(CategoryUrl);

        if (CategoryUrl != null)
        {
            Category = CategoryService.Categories.FirstOrDefault(c => c.Url.ToLower().Equals(CategoryUrl.ToLower()));
        }
        else
        {
            Category = null;
        }

        await StatsService.IncrementVisits();
        await StatsService.GetVisits();
    }
}